Create static folder static -> styles 
                            -> images
                            -> js
In style -> main.css (write css)

Go to settings.py
    STATICFILES_DIRS = [
        BASE_DIR / 'static' #or os.path.join(BASE_DIR,'static')
    ]
Then simply load tag {% load static %} and write href="{% static 'styles/main.css' %}

Now, tell django where to upload image file generated by user , edit settings.py
MEDIA_ROOT = BASE_DIR / 'static/images'
Now to show those images we need to tell django where to look for them by MEDIA_URL, by default it is empty string
MEDIA_URL = '/images/'
and in urls.py add these lines
"""
from django.conf import settings
from django.conf.urls.static import static 

urlpatterns += static(settings.MEDIA_URL, document_root = settings.MEDIA_ROOT)

"""

Now how to let users upload images from html forms
1st=> go to forms.py and add the field

2nd=> modify html file and write enctype="multipart/form-data"

3dr=> modify view and add request.FILES

Now this method is not good for production, we need to seperate our static files from django project
=> 
setup STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') this will define wehre our static files in production

then run python manage.py collectstatic and change DEBUG = FALSE

then updated urls.py => add staticurl to server our static files in production 

urlpatterns+= static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)

then install whitenoise and add this this to middleware 'whitenoise.middleware.WhiteNoiseMiddleware',

but whitenoise does not serve user uploaded content we need to configure on s3 etc
